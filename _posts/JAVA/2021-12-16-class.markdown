---
title: "JAVA 객체지향 1"
permalink: /Class/
excerpt: "객체지향 프로그래밍을 위한 [클래스]"
last_modified_at: 2021-12-16T13:56:18-14:00
toc: true
toc_sticky: true
categories:
  - OOP
  - JAVA
---
내가 이해하기 위한 JAVA 객체지향 1
# 클래스

```java
public class Animal {

}
```
>클래스 선언만 있어서 껍데기 뿐인 클래스지만  
>**객체(object)를 만드는 기능을 수행 함**

Animal cat = new Animal();  
**new는 객체를 생성**할 때 사용하는 키워드

#### 객체 vs 인스턴스
`Animal의 인스턴스(instance) cat`<br/>
`Animal의 객체 cat`<br/>
`인스턴스와 객체는 모두 클래스로부터 만들어진 것`

**인스턴스는 클래스와 객체의 관계를 설명할 때 사용**
>cat은 누구에게나 객체로 보여지지만 <br/>Animal에게는 인스턴스로 하는게 명확하다고 한다.

```java
public class Animal {
	string name;
}
```

name은 객체 변수 (인스턴스 변수, 멤버 변수, 속성)

>객체 변수는 도트연산자(.)으로 접근 가능<br/>
`ex) 객체.객체변수`

```java
Animal cat = new Animal()
```
```java 
cat.name; //객체 : cat, 객체변수 : name
```
<br/>
**메소드**
>클래스 내에 구현된 함수<br/>
>클래스에는 객체 변수와 더불어 메소드가 있다.

```java  
public class Animal {
		string name;
		
		public void setName(String name){
			this.name = name;
		}
	
		public static void main(String[] args){
			Animal cat = new Animal();
			System.out.println(cat.name);
		}
	}
```

>메소드 호출도 객체 변수과 같이 객체.메소드로 호출한다<br/>
>`ex) cat.setName("boby");`

setName 메소드 호출을 위해 수정하면 아래 코드와 같이 된다.

```java
public class Animal{
	string name;
	
	public void setName(String name){
		this.name = name;
	}

	public static void main(String[] args){
		Animal cat = new Animal();
		cat.setName("boby");
		System.out.println(cat.name);
	}
}
```


```java
this.name = name; // setName 메소드를 호출하면 왼쪽 구문이
this.name = "boby"; // 로 해석 될 것이다.
```

<br/>**메소드 내부에 사용된 this는<br/>Animal 클래스에 의해 생성된 객체를 지칭한다.**

```java
Animal cat = new Animal() //cat 객체를 만들고 
cat.setName("boby"); // setName 메소드를 호출하면
this.name = name; // setName 메소드의 this는 cat이 될 것이다.
```

>정확한 이해를 위해 main 메소드에 객체 dog로 
>setName 메소드를 호출하여 this에 대해 한번 더 확인해보자

```java 
public class Animal{
	string name;
	
	public void setName(String name){
		this.name = name;
	}

	public static void main(String[] args){
		Animal cat = new Animal();
		Animal dog = new Animal();
		cat.setName("boby");
		dog.setName("happy");
		System.out.println(cat.name);
		System.out.println(dog.name);
	}
}
```

**객체 cat과 dog는 setName 메소드를 사용**하면서<br/>
`java this.name = name;`를 사용했지만
`System.out.println(cat.name);`
`System.out.println(dog.name);`<br/>
**출력했을땐 각각 다른 결과인 boby와 happy가 출력**되며, 

**객체 변수는 공유하지 않는다는 것을 확인 할 수 있다**

**'클래스에서 객체 변수의 값이 독립적'**이라는 것이 <br/>클래스의 존재 이유이며,**'객체 지향적이다'**라는 이유이다.

출처<br/>
[https://wikidocs.net/214](https://wikidocs.net/214)